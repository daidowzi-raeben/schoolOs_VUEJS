(window.webpackJsonp = window.webpackJsonp || []).push([[35], { 383: function (t, e, n) { "use strict"; n.d(e, "a", (function () { return c })); var l = n(40), o = n.n(l), c = function (t, e) { o.a.post("http://localhost:3095" + e, t, { header: { "Context-Type": "multipart/form-data" } }).then((function (t) { console.log("axiosForm", t.data) })).catch((function (t) { console.log("AXIOS FALSE", t) })) } }, 449: function (t, e, n) { "use strict"; n.r(e); n(53), n(45), n(52), n(69), n(70); var l = n(29), o = (n(23), n(44), n(75), n(76), n(54)), c = n(383); function r(object, t) { var e = Object.keys(object); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(object); t && (n = n.filter((function (t) { return Object.getOwnPropertyDescriptor(object, t).enumerable }))), e.push.apply(e, n) } return e } function _(t) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? r(Object(source), !0).forEach((function (e) { Object(l.a)(t, e, source[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(source)) : r(Object(source)).forEach((function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(source, e)) })) } return t } var d = { layout: "default-pc", data: function () { return { allCheck: !1, swiperOption: { slidesPerView: 1, spaceBetween: 30, loop: !0, pagination: { el: ".swiper-pagination", clickable: !0 }, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } }, params: { type: "questList" }, paramsForm: {}, paramsDetail: {}, noticeSubject: "", noticeContent: "", noticeIdx: "", calendarSales: null, calendarDiscountSales: null, cate_name: "", cateIdx: "", itemPrice: 0, itemPriceDiscount: 0, itemContent: "", masks: { input: "YYYY-MM-DD" }, itemName: "", queryCate: null, quest: { subject: "", contents: "", cate: "", price: "", intellect: "", smt_idx: "", effort: "", health: "", etiquette: "", m_price: "0", m_intellect: "0", m_effort: "0", m_health: "0", m_etiquette: "0", start_day: "", end_day: "", type: "" }, confirm: {}, fileData: {}, cateForm: {}, checked: [], checkedTF: !1 } }, computed: _(_(_({}, Object(o.f)(["LOGIN"])), Object(o.d)(["GET_AXIOS_CALLBACK_GETTER", "LOGIN_TEACHER"])), {}, { selectAll: { get: function () { return !!this.GET_AXIOS_CALLBACK_GETTER.participation && (!!this.checked && this.checked.length === this.GET_AXIOS_CALLBACK_GETTER.participation.length) }, set: function (t) { var e = []; t && this.GET_AXIOS_CALLBACK_GETTER.participation.forEach((function (t) { e.push(t.sqm_idx) })), this.checked = e } } }), watch: { "params.type": { handler: function (t) { "shopList" === t && (this.params = this.LOGIN_TEACHER, this.params.type = "questList", this.params.queryCate = null, this.GET_AXIOS(this.params), this.params.type = "") } }, "$route.query.cate": { handler: function (t) { console.log(t), t ? (this.queryCate = t, this.params.type = "questList", this.params = this.LOGIN_TEACHER, this.params.queryCate = t, this.GET_AXIOS(this.params)) : (console.log("쿼리 없음"), this.params.type = "questList", this.params.queryCate = null, this.params = this.LOGIN_TEACHER, this.GET_AXIOS(this.params)) }, immediate: !0 } }, beforeCreate: function () { }, mounted: function () { console.log(this.$nuxt, this.$config), this.params = this.LOGIN_TEACHER, this.params.type = "questList", this.params.queryCate = null, this.GET_AXIOS(this.params), this.params.type = "" }, methods: _(_(_({}, Object(o.c)(["POST_AXIOS", "GET_AXIOS"])), Object(o.e)(["LOADING_TRUE"])), {}, { onSubmit: function () { var t = this; this.LOADING_TRUE(); var e = new FormData; e.append("type", "questWrite"), e.append("smt_idx", this.LOGIN_TEACHER.smt_idx), e.append("subject", this.quest.subject), e.append("contents", this.quest.contents), e.append("cate", this.quest.cate), e.append("price", this.quest.price), e.append("intellect", this.quest.intellect), e.append("effort", this.quest.effort), e.append("health", this.quest.health), e.append("etiquette", this.quest.etiquette), e.append("m_price", this.quest.m_price), e.append("m_intellect", this.quest.m_intellect), e.append("m_effort", this.quest.m_effort), e.append("m_health", this.quest.m_health), e.append("m_etiquette", this.quest.m_etiquette), e.append("start_day", this.quest.start_day), e.append("end_day", this.quest.end_day), console.log(e), this.$axios.post("http://localhost:3095/teacher.php", e, { header: { "Context-Type": "multipart/form-data" } }).then((function (e) { setTimeout((function () { t.params = t.LOGIN_TEACHER, t.params.type = "questList", t.GET_AXIOS(t.params), t.$bvModal.hide("itemInsertTodo") })) })).catch((function (t) { console.log("AXIOS FALSE", t) })) }, onSubmitItem: function () { var t = this, e = new FormData; e.append("type", "questEdit"), e.append("smt_idx", this.LOGIN_TEACHER.smt_idx), e.append("subject", this.quest.subject), e.append("contents", this.quest.contents), e.append("cate", this.quest.cate), e.append("price", this.quest.price), e.append("intellect", this.quest.intellect), e.append("effort", this.quest.effort), e.append("health", this.quest.health), e.append("etiquette", this.quest.etiquette), e.append("m_price", this.quest.m_price), e.append("m_intellect", this.quest.m_intellect), e.append("m_effort", this.quest.m_effort), e.append("m_health", this.quest.m_health), e.append("m_etiquette", this.quest.m_etiquette), e.append("start_day", this.quest.start_day), e.append("end_day", this.quest.end_day), e.append("idx", this.noticeIdx), Object(c.a)(e, "/teacher.php"), setTimeout((function () { t.params = t.LOGIN_TEACHER, t.params.type = "questList", t.GET_AXIOS(t.params) }), 1500), this.$bvModal.hide("itemInsertTodo") }, isActiveCalendar: function (t) { this.$refs[t].classList.toggle("is_active") }, onClickCategory: function (t) { t ? this.$router.push("/todo-list-end?cate=".concat(t)) : (this.queryCate = "", this.$router.push("/todo-list-end")) }, onSubmitCate: function () { var t = this; this.cateForm.subject = this.cate_name, this.cateForm.smt_idx = this.LOGIN_TEACHER.smt_idx, this.cateForm.type = "cateWrite", this.POST_AXIOS(this.cateForm), this.$bvModal.hide("cateInsert"), setTimeout((function () { t.params = t.LOGIN_TEACHER, t.params.type = "questList", t.GET_AXIOS(t.params) }), 1e3) }, onClickItemDetail: function (t) { var e = this; this.noticeIdx = t, this.paramsDetail = this.LOGIN_TEACHER, this.paramsDetail.type = "questList", this.paramsDetail.idx = t, console.log(t), this.GET_AXIOS(this.paramsDetail), setTimeout((function () { e.noticeSubject = e.GET_AXIOS_CALLBACK_GETTER.view.subject, e.noticeContent = e.GET_AXIOS_CALLBACK_GETTER.view.contents, e.quest = e.GET_AXIOS_CALLBACK_GETTER.view, e.$bvModal.show("itemInsertTodo") }), 1500) }, onClickItemDetailConfirm: function (t) { var e = this; this.checked = [], this.noticeIdx = t, this.paramsDetail = this.LOGIN_TEACHER, this.paramsDetail.type = "questList", this.paramsDetail.idx = t, console.log(t), this.GET_AXIOS(this.paramsDetail), setTimeout((function () { e.noticeSubject = e.GET_AXIOS_CALLBACK_GETTER.view.subject, e.noticeContent = e.GET_AXIOS_CALLBACK_GETTER.view.contents, console.log(e.GET_AXIOS_CALLBACK_GETTER.participation), console.log(e.GET_AXIOS_CALLBACK_GETTER.participationFile) }), 1500), this.$bvModal.show("questConfirm") }, onClickitemInsertTodo: function () { if (!this.GET_AXIOS_CALLBACK_GETTER.questCate) return alert("카테고리를 먼저 추가해 주세요"); var t = new Date, e = t.getFullYear() + "-" + ("0" + (t.getMonth() + 1)).slice(-2) + "-" + ("0" + t.getDate()).slice(-2); this.quest.start_day = e, this.noticeIdx = null, this.noticeSubject = "", this.noticeContent = "", this.$bvModal.show("itemInsertTodo") }, onSubmitConfirm: function (t, e, n, l) { var o = this; this.confirm.type = "questconfirm", this.confirm.sms_idx = n, this.confirm.idx = e, this.confirm.status = t, this.confirm.checked = this.checked, this.confirm.mode = "all" === l ? "all" : null, this.POST_AXIOS(this.confirm), setTimeout((function () { o.noticeIdx = e, o.paramsDetail = o.LOGIN_TEACHER, o.paramsDetail.type = "questList", o.paramsDetail.idx = o.noticeIdx, console.log(e), o.GET_AXIOS(o.paramsDetail) }), 1500) }, onClickFileDetail: function (t, e) { this.fileData = this.LOGIN_TEACHER, this.fileData.type = "questList", this.fileData.idx = t, this.fileData.sms_idx = e, this.GET_AXIOS(this.fileData), this.$bvModal.show("fileDataSlide") } }) }, m = n(84), component = Object(m.a)(d, (function () { var t = this, e = t.$createElement, n = t._self._c || e; return n("div", [n("div", {}, [n("div", { staticClass: "flex" }, [t.LOGIN_TEACHER ? n("h4", { staticStyle: { cursor: "pointer" }, on: { click: function (e) { return t.$router.push("/todo-list") } } }, [t._v("\n        진행중 " + t._s(t.LOGIN_TEACHER.todo_name) + "\n      ")]) : t._e(), t._v(" "), t.LOGIN_TEACHER ? n("h4", { staticClass: "m-l-3 is_active" }, [t._v("\n        완료 " + t._s(t.LOGIN_TEACHER.todo_name) + "\n      ")]) : t._e()]), t._v(" "), n("div", { staticStyle: { "padding-top": "0vh" }, attrs: { id: "jellyAdminheader" } }, [n("div", { staticClass: "m-t-5" }, [n("span", { staticClass: "spanBox m-r-2", class: t.queryCate ? "" : "is_active", on: { click: function (e) { return t.onClickCategory("") } } }, [t._v("전체")]), t._v(" "), t.GET_AXIOS_CALLBACK_GETTER.questCate ? n("span", t._l(t.GET_AXIOS_CALLBACK_GETTER.questCate, (function (e, i) { return n("span", { key: "cate" + i, staticClass: "spanBox m-r-2", class: t.queryCate == e.idx ? "is_active" : "", on: { click: function (n) { return t.onClickCategory(e.idx) } } }, [t._v("\n            " + t._s(e.subject) + "\n          ")]) })), 0) : t._e()]), t._v(" "), n("div", { staticClass: "student form" }, [n("div", { staticClass: "student__list" }, [n("div", { staticClass: "m-t-3" }, [t.GET_AXIOS_CALLBACK_GETTER.questListEnd ? n("table", { staticClass: "jelly-table" }, [t._m(0), t._v(" "), t._l(t.GET_AXIOS_CALLBACK_GETTER.questListEnd, (function (e, i) { return n("tr", { key: "shopItem" + i, staticStyle: { cursor: "pointer" } }, [n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v("\n                  " + t._s(t._f("moment")(e.start_day, "YY.MM.DD")) + "\n                ")]), t._v(" "), n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v("\n                  " + t._s(t._f("moment")(e.end_day, "YY.MM.DD")) + "\n                ")]), t._v(" "), n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v(t._s(e.subject))]), t._v(" "), n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v("\n                  " + t._s(e.is_read ? e.is_read : 0) + "\n                ")]), t._v(" "), n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v("\n                  " + t._s(e.is_read ? e.is_status : 0) + "\n                ")]), t._v(" "), n("td", { on: { click: function (n) { return t.onClickItemDetail(e.idx) } } }, [t._v("\n                  " + t._s(e.is_read ? e.is_confirm : 0) + "\n                ")]), t._v(" "), n("td", [n("div", { staticClass: "flex" }, [n("button", { staticClass: "flex-full jelly-btn jelly-btn--default m-r-1", on: { click: function (n) { return t.onClickItemDetailConfirm(e.idx) } } }, [t._v("\n                      검사\n                    ")])])])]) }))], 2) : t._e()])])]), t._v(" "), n("div", { staticClass: "m-t-15 m-l-4" })])]), t._v(" "), n("b-modal", { attrs: { id: "itemInsertTodo", size: "lg", "hide-footer": "", "hide-header": "" } }, [n("div", { staticClass: "m-t-5 flex" }, [n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("카테고리")]), t._v(" "), t.GET_AXIOS_CALLBACK_GETTER.questCate ? n("select", { directives: [{ name: "model", rawName: "v-model", value: t.quest.cate, expression: "quest.cate" }], staticClass: "jelly-text jelly-text--h wd-full", on: { change: function (e) { var n = Array.prototype.filter.call(e.target.options, (function (t) { return t.selected })).map((function (t) { return "_value" in t ? t._value : t.value })); t.$set(t.quest, "cate", e.target.multiple ? n : n[0]) } } }, [n("option", { attrs: { value: "" } }, [t._v("선택하세요")]), t._v(" "), t._l(t.GET_AXIOS_CALLBACK_GETTER.questCate, (function (e) { return n("option", { key: e.idx, domProps: { value: e.idx } }, [t._v("\n            " + t._s(e.subject) + "\n          ")]) }))], 2) : t._e()]), t._v(" "), n("div", { staticClass: "flex-full m-l-1" }, [n("p", [t._v("제목")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.subject, expression: "quest.subject" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.subject }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "subject", e.target.value) } } })])]), t._v(" "), n("div", { staticClass: "m-t-5 flex" }, [n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("시작일")]), t._v(" "), n("div", [n("b-form-datepicker", { staticClass: "jelly-text jelly-text--h wd-full", model: { value: t.quest.start_day, callback: function (e) { t.$set(t.quest, "start_day", e) }, expression: "quest.start_day" } })], 1)]), t._v(" "), n("div", { staticClass: "flex-full m-l-1" }, [n("p", [t._v("종료일")]), t._v(" "), n("div", [n("b-form-datepicker", { staticClass: "jelly-text jelly-text--h wd-full", model: { value: t.quest.end_day, callback: function (e) { t.$set(t.quest, "end_day", e) }, expression: "quest.end_day" } })], 1)])]), t._v(" "), n("div", { staticClass: "m-t-5 flex" }, [n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("보상금")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.price, expression: "quest.price" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.price }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "price", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full" }, [n("p", [t._v("지혜")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.intellect, expression: "quest.intellect" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.intellect }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "intellect", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full m-r-1 m-l-1" }, [n("p", [t._v("노력")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.effort, expression: "quest.effort" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.effort }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "effort", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("건강")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.health, expression: "quest.health" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.health }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "health", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full" }, [n("p", [t._v("예절")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.etiquette, expression: "quest.etiquette" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.etiquette }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "etiquette", e.target.value) } } })])]), t._v(" "), n("div", { staticClass: "m-t-5" }, [t._v("실패 시 패널티 사용")]), t._v(" "), n("span", [t._v("- 부호를 사용하지 않고 작성해 주세요")]), t._v(" "), n("div", { staticClass: "flex m-t-2" }, [n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("보상금")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.m_price, expression: "quest.m_price" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.m_price }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "m_price", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full" }, [n("p", [t._v("지혜")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.m_intellect, expression: "quest.m_intellect" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.m_intellect }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "m_intellect", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full m-r-1 m-l-1" }, [n("p", [t._v("노력")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.m_effort, expression: "quest.m_effort" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.m_effort }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "m_effort", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full m-r-1" }, [n("p", [t._v("건강")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.m_health, expression: "quest.m_health" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.m_health }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "m_health", e.target.value) } } })]), t._v(" "), n("div", { staticClass: "flex-full" }, [n("p", [t._v("예절")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.quest.m_etiquette, expression: "quest.m_etiquette" }], staticClass: "jelly-text jelly-text--h wd-full", attrs: { type: "text" }, domProps: { value: t.quest.m_etiquette }, on: { input: function (e) { e.target.composing || t.$set(t.quest, "m_etiquette", e.target.value) } } })])]), t._v(" "), n("div", { staticClass: "m-t-5" }, [n("vue-editor", { model: { value: t.quest.contents, callback: function (e) { t.$set(t.quest, "contents", e) }, expression: "quest.contents" } })], 1), t._v(" "), n("div", { staticClass: "m-t-5 text-center" }, [n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (e) { return t.$bvModal.hide("itemInsertTodo") } } }, [t._v("\n        닫기\n      ")]), t._v(" "), t.noticeIdx ? n("button", { staticClass: "jelly-btn jelly-btn--pink", on: { click: t.onSubmitItem } }, [t._v("\n        수정하기\n      ")]) : t._e(), t._v(" "), t.noticeIdx ? t._e() : n("button", { staticClass: "jelly-btn jelly-btn--pink", on: { click: t.onSubmit } }, [t._v("\n        등록하기\n      ")])])]), t._v(" "), n("b-modal", { ref: "ref-cateInsert", attrs: { id: "cateInsert", size: "lg", "hide-footer": "", "hide-header": "" } }, [n("div", {}, [n("p", [t._v("카테고리 이름")]), t._v(" "), n("input", { directives: [{ name: "model", rawName: "v-model", value: t.cate_name, expression: "cate_name" }], staticClass: "jelly-text wd-full", attrs: { type: "text" }, domProps: { value: t.cate_name }, on: { input: function (e) { e.target.composing || (t.cate_name = e.target.value) } } })]), t._v(" "), n("div", { staticClass: "m-t-5 text-center" }, [n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (e) { return t.$bvModal.hide("cateInsert") } } }, [t._v("\n        닫기\n      ")]), t._v(" "), n("button", { staticClass: "jelly-btn jelly-btn--pink", on: { click: t.onSubmitCate } }, [t._v("\n        등록하기\n      ")])])]), t._v(" "), n("b-modal", { attrs: { id: "fileDataSlide", size: "lg", "hide-footer": "", "hide-header": "" } }, [t.GET_AXIOS_CALLBACK_GETTER.participationFile ? n("div", [n("swiper", { attrs: { options: t.swiperOption } }, [t._l(t.GET_AXIOS_CALLBACK_GETTER.participationFile, (function (t, i) { return n("swiper-slide", { key: i }, [n("img", { attrs: { src: "https://api.school-os.net/data/student/quest/" + t.file_name, width: "100%" } })]) })), t._v(" "), n("div", { staticClass: "swiper-pagination", attrs: { slot: "pagination" }, slot: "pagination" }), t._v(" "), n("div", { staticClass: "swiper-button-prev", attrs: { slot: "button-prev" }, slot: "button-prev" }), t._v(" "), n("div", { staticClass: "swiper-button-next", attrs: { slot: "button-next" }, slot: "button-next" })], 2)], 1) : t._e()]), t._v(" "), n("b-modal", { attrs: { id: "questConfirm", size: "xl", "hide-footer": "", "hide-header": "" } }, [n("div", {}), t._v(" "), n("div", [t.GET_AXIOS_CALLBACK_GETTER.participation ? n("table", { staticClass: "jelly-table" }, [n("thead", [n("tr", [n("th", [n("input", { directives: [{ name: "model", rawName: "v-model", value: t.selectAll, expression: "selectAll" }], attrs: { type: "checkbox" }, domProps: { checked: Array.isArray(t.selectAll) ? t._i(t.selectAll, null) > -1 : t.selectAll }, on: { change: function (e) { var n = t.selectAll, l = e.target, o = !!l.checked; if (Array.isArray(n)) { var c = t._i(n, null); l.checked ? c < 0 && (t.selectAll = n.concat([null])) : c > -1 && (t.selectAll = n.slice(0, c).concat(n.slice(c + 1))) } else t.selectAll = o } } })]), t._v(" "), n("th", [t._v("이름")]), t._v(" "), n("th", [t._v("읽음여부")]), t._v(" "), n("th", [t._v("수락여부")]), t._v(" "), n("th", [t._v("제출여부")]), t._v(" "), n("th", [t._v("인증샷")]), t._v(" "), n("th", [t._v("관리")])])]), t._v(" "), t._l(t.GET_AXIOS_CALLBACK_GETTER.participation, (function (e, i) { return [n("tr", { key: i, staticClass: "text-center", class: "Y" === e.is_confirm ? "is_active" : "" }, [n("th", ["Y" === e.is_read && "Y" !== e.is_confirm ? n("input", { directives: [{ name: "model", rawName: "v-model", value: t.checked, expression: "checked" }], key: i, attrs: { id: "checked" + e.sq_idx, type: "checkbox" }, domProps: { value: e.sqm_idx, checked: Array.isArray(t.checked) ? t._i(t.checked, e.sqm_idx) > -1 : t.checked }, on: { change: function (n) { var l = t.checked, o = n.target, c = !!o.checked; if (Array.isArray(l)) { var r = e.sqm_idx, _ = t._i(l, r); o.checked ? _ < 0 && (t.checked = l.concat([r])) : _ > -1 && (t.checked = l.slice(0, _).concat(l.slice(_ + 1))) } else t.checked = c } } }) : t._e()]), t._v(" "), n("td", [t._v(t._s(e.reg_name))]), t._v(" "), n("td", [t._v(t._s("Y" === e.is_read ? "읽음" : "안읽음"))]), t._v(" "), n("td", [t._v(t._s("Y" === e.is_status ? "수락" : "미수락"))]), t._v(" "), "N" === e.is_confirm ? n("td", [t._v("\n              " + t._s("Y" === e.is_complete ? "제출" : "미제출") + "\n            ")]) : t._e(), t._v(" "), "R" === e.is_confirm ? n("td", [t._v("다시 제출")]) : t._e(), t._v(" "), e.is_confirm ? t._e() : n("td", [t._v("미제출")]), t._v(" "), "Y" === e.is_confirm ? n("td", [t._v("완료")]) : t._e(), t._v(" "), "F" === e.is_confirm ? n("td", [t._v("실패")]) : t._e(), t._v(" "), "C" === e.is_confirm ? n("td", [t._v("취소")]) : t._e(), t._v(" "), n("td", ["Y" === e.is_complete ? n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (n) { return t.onClickFileDetail(e.sq_idx, e.sms_idx) } } }, [t._v("\n                확인하기\n              ")]) : t._e()]), t._v(" "), n("td", { staticClass: "text-left" }, ["F" !== e.is_confirm ? n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (n) { return t.onSubmitConfirm("F", e.sq_idx, e.idx, "") } } }, [t._v("\n                실패\n              ")]) : t._e(), t._v(" "), e.is_complete && "R" !== e.is_confirm ? n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (n) { return t.onSubmitConfirm("R", e.sq_idx, e.idx, "") } } }, [t._v("\n                다시 제출\n              ")]) : t._e(), t._v(" "), e.is_complete && "Y" !== e.is_confirm ? n("button", { staticClass: "jelly-btn jelly-btn--pink", on: { click: function (n) { return t.onSubmitConfirm("Y", e.sq_idx, e.idx, "") } } }, [t._v("\n                성공\n              ")]) : t._e(), t._v(" "), "Y" === e.is_confirm ? n("button", { staticClass: "jelly-btn jelly-btn--gray", on: { click: function (n) { return t.onSubmitConfirm("C", e.sq_idx, e.idx, "") } } }, [t._v("\n                취소\n              ")]) : t._e()])]), t._v(" "), e.content ? n("tr", [n("td", { staticStyle: { "white-space": "pre" }, attrs: { colspan: "7" } }, [t._v("\n              " + t._s(e.content) + "\n            ")])]) : t._e()] }))], 2) : t._e()]), t._v(" "), n("div", { staticClass: "m-t-5 text-center" }, [n("button", { staticClass: "jelly-btn jelly-btn--default", on: { click: function (e) { return t.$bvModal.hide("questConfirm") } } }, [t._v("\n        닫기\n      ")]), t._v(" "), t.checked.length > 0 ? n("button", { staticClass: "jelly-btn jelly-btn--pink", on: { click: function (e) { return t.onSubmitConfirm("Y", t.noticeIdx, t.noticeIdx, "all") } } }, [t._v("\n        일괄 완료 처리\n      ")]) : t._e()])])], 1) }), [function () { var t = this, e = t.$createElement, n = t._self._c || e; return n("tr", [n("th", [t._v("시작일")]), t._v(" "), n("th", [t._v("종료일")]), t._v(" "), n("th", [t._v("제목")]), t._v(" "), n("th", [t._v("읽음")]), t._v(" "), n("th", [t._v("수락")]), t._v(" "), n("th", [t._v("검사요청")]), t._v(" "), n("th", [t._v("관리")])]) }], !1, null, null, null); e.default = component.exports } }]);